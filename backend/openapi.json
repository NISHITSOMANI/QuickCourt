{
  "openapi": "3.0.0",
  "info": {
    "title": "QuickCourt API",
    "description": "Sports venue booking platform API",
    "version": "1.0.0",
    "contact": {
      "name": "QuickCourt Support",
      "email": "support@quickcourt.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://api.quickcourt.com/api/v1",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is running",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "description": "Authenticate user and return tokens",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues": {
      "get": {
        "summary": "Get venues",
        "description": "Retrieve a list of venues with optional filters",
        "tags": ["Venues"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sport",
            "in": "query",
            "description": "Filter by sport",
            "schema": {
              "type": "string",
              "enum": ["badminton", "tennis", "cricket", "football", "basketball", "volleyball", "squash", "table-tennis", "swimming", "gym"]
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Filter by city",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create venue",
        "description": "Create a new venue (owner/admin only)",
        "tags": ["Venues"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VenueCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venue created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bookings": {
      "post": {
        "summary": "Create booking",
        "description": "Create a new booking",
        "tags": ["Bookings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booking created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error or booking conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user bookings",
        "description": "Retrieve bookings for the current user",
        "tags": ["Bookings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by booking status",
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "cancelled", "completed"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{bookingId}": {
      "get": {
        "summary": "Get specific booking",
        "description": "Retrieve detailed information about a specific booking",
        "tags": ["Bookings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Cancel booking",
        "description": "Cancel a specific booking (User can cancel their own bookings)",
        "tags": ["Bookings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booking cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Booking cancelled successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot cancel this booking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courts/{courtId}/availability": {
      "get": {
        "summary": "Get court availability",
        "description": "Retrieve availability slots for a specific court",
        "tags": ["Courts"],
        "parameters": [
          {
            "name": "courtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-12-25"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Court availability retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "court": {
                          "type": "string",
                          "example": "64a7b8c9d1e2f3a4b5c6d7e9"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2024-12-25"
                        },
                        "slots": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "startTime": {
                                "type": "string",
                                "example": "09:00"
                              },
                              "endTime": {
                                "type": "string",
                                "example": "10:00"
                              },
                              "available": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Court not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve the current user's profile information",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update the current user's profile information",
        "tags": ["Profile"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100,
                    "example": "John Doe Updated"
                  },
                  "phone": {
                    "type": "string",
                    "pattern": "^[6-9]\\d{9}$",
                    "example": "9876543210"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/venues": {
      "get": {
        "summary": "Get all venues (Admin)",
        "description": "Retrieve all venues with optional filters (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Filter by venue status",
            "schema": {
              "type": "string",
              "enum": ["pending", "approved", "rejected"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/venues/{venueId}/approve": {
      "patch": {
        "summary": "Approve venue (Admin)",
        "description": "Approve a pending venue (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venue approved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "summary": "Get all users (Admin)",
        "description": "Retrieve all users with optional filters (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Filter by user role",
            "schema": {
              "type": "string",
              "enum": ["user", "owner", "admin"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by user status",
            "schema": {
              "type": "string",
              "enum": ["active", "inactive", "banned"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/venues/{venueId}": {
      "delete": {
        "summary": "Delete venue (Admin)",
        "description": "Delete any venue (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venue deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Venue deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/venues/{venueId}/reject": {
      "patch": {
        "summary": "Reject venue (Admin)",
        "description": "Reject a pending venue (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Insufficient documentation provided"
                  }
                },
                "required": ["reason"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venue rejected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{userId}": {
      "get": {
        "summary": "Get user details (Admin)",
        "description": "Retrieve detailed information about a specific user (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user (Admin)",
        "description": "Update any user's information (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user (Admin)",
        "description": "Delete any user account (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/owner/venues": {
      "get": {
        "summary": "Get owner's venues",
        "description": "Retrieve all venues owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Venues retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create venue",
        "description": "Create a new venue (Owner only)",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VenueCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venue created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/owner/venues/{venueId}": {
      "get": {
        "summary": "Get specific venue",
        "description": "Retrieve detailed information about a specific venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venue retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update venue",
        "description": "Update a venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VenueCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venue updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete venue",
        "description": "Delete a venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venue deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Venue deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/owner/venues/{venueId}/bookings": {
      "get": {
        "summary": "Get venue bookings",
        "description": "Retrieve all bookings for a specific venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by booking status",
            "schema": {
              "type": "string",
              "enum": ["pending", "confirmed", "cancelled", "completed"]
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Filter by specific date",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-12-25"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/owner/venues/{venueId}/courts": {
      "post": {
        "summary": "Add court to venue",
        "description": "Add a new court to a venue (Owner only)",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Court 1"
                  },
                  "sport": {
                    "type": "string",
                    "example": "Badminton"
                  },
                  "pricePerHour": {
                    "type": "number",
                    "example": 150
                  },
                  "description": {
                    "type": "string",
                    "example": "Premium court with synthetic surface"
                  }
                },
                "required": ["name", "sport", "pricePerHour"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Court added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Owner access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}": {
      "get": {
        "summary": "Get venue details",
        "description": "Retrieve detailed information about a specific venue",
        "tags": ["Venues"],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venue retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/owner/venues/{venueId}/courts/{courtId}": {
      "put": {
        "summary": "Update court",
        "description": "Update a court in a venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "courtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourtCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Court updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VenueResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue or court not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete court",
        "description": "Delete a court from a venue owned by the current user",
        "tags": ["Owner"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "courtId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Court deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Court deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Not the venue owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue or court not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/venues/{venueId}/reviews": {
      "get": {
        "summary": "Get venue reviews",
        "description": "Retrieve all reviews for a specific venue",
        "tags": ["Reviews"],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reviews retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reviews": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Review"
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add review for venue",
        "description": "Add a review and rating for a venue",
        "tags": ["Reviews"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 5,
                    "example": 4
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "Great venue with excellent facilities!"
                  }
                },
                "required": ["rating"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "review": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "64a7b8c9d1e2f3a4b5c6d7e0"
                            },
                            "user": {
                              "type": "string",
                              "example": "64a7b8c9d1e2f3a4b5c6d7e8"
                            },
                            "venue": {
                              "type": "string",
                              "example": "64a7b8c9d1e2f3a4b5c6d7e9"
                            },
                            "rating": {
                              "type": "integer",
                              "example": 4
                            },
                            "comment": {
                              "type": "string",
                              "example": "Great venue with excellent facilities!"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Venue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{bookingId}/payment": {
      "post": {
        "summary": "Process booking payment",
        "description": "Process payment for a booking",
        "tags": ["Payments"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentMethod": {
                    "type": "string",
                    "enum": ["credit_card", "debit_card", "upi", "net_banking"],
                    "example": "credit_card"
                  },
                  "cardNumber": {
                    "type": "string",
                    "example": "4111111111111111"
                  },
                  "expiryDate": {
                    "type": "string",
                    "example": "12/25"
                  },
                  "cvv": {
                    "type": "string",
                    "example": "123"
                  }
                },
                "required": ["paymentMethod"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Payment processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "payment": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "64a7b8c9d1e2f3a4b5c6d7f0"
                            },
                            "booking": {
                              "type": "string",
                              "example": "64a7b8c9d1e2f3a4b5c6d7e1"
                            },
                            "amount": {
                              "type": "number",
                              "example": 600
                            },
                            "status": {
                              "type": "string",
                              "enum": ["pending", "completed", "failed", "refunded"],
                              "example": "completed"
                            },
                            "transactionId": {
                              "type": "string",
                              "example": "txn_1234567890"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/admin/analytics": {
      "get": {
        "summary": "Get platform analytics (Admin)",
        "description": "Retrieve platform analytics data (Admin only)",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date for analytics period",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-01-01"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date for analytics period",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-12-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analytics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalUsers": {
                          "type": "integer",
                          "example": 1250
                        },
                        "totalVenues": {
                          "type": "integer",
                          "example": 45
                        },
                        "totalBookings": {
                          "type": "integer",
                          "example": 3200
                        },
                        "totalRevenue": {
                          "type": "number",
                          "example": 125000
                        },
                        "popularSports": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sport": {
                                "type": "string",
                                "example": "Badminton"
                              },
                              "bookings": {
                                "type": "integer",
                                "example": 1200
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get user notifications",
        "description": "Retrieve notifications for the current user",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "notifications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "example": "64a7b8c9d1e2f3a4b5c6d7f1"
                              },
                              "user": {
                                "type": "string",
                                "example": "64a7b8c9d1e2f3a4b5c6d7e8"
                              },
                              "title": {
                                "type": "string",
                                "example": "Booking Confirmation"
                              },
                              "message": {
                                "type": "string",
                                "example": "Your booking for Court 1 on 2024-12-25 at 10:00 AM has been confirmed."
                              },
                              "read": {
                                "type": "boolean",
                                "example": false
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "$ref": "#/components/schemas/Pagination"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "QuickCourt API is running"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Error description"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "required": ["name", "email", "phone", "password"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "phone": {
            "type": "string",
            "pattern": "^[6-9]\\d{9}$",
            "example": "9876543210"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "example": "Password123!"
          },
          "role": {
            "type": "string",
            "enum": ["user", "owner"],
            "default": "user"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "Password123!"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Login successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "tokens": {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "phone": {
            "type": "string",
            "example": "9876543210"
          },
          "role": {
            "type": "string",
            "enum": ["user", "owner", "admin"],
            "example": "user"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "banned"],
            "example": "active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "ProfileUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe Updated"
          },
          "phone": {
            "type": "string",
            "pattern": "^[6-9]\\d{9}$",
            "example": "9876543210"
          }
        }
      },
      "PaymentProcess": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "enum": ["credit_card", "debit_card", "upi", "net_banking"],
            "example": "credit_card"
          },
          "cardNumber": {
            "type": "string",
            "example": "4111111111111111"
          },
          "expiryDate": {
            "type": "string",
            "example": "12/25"
          },
          "cvv": {
            "type": "string",
            "example": "123"
          }
        },
        "required": ["paymentMethod"]
      },
      "ReviewCreate": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "example": 4
          },
          "comment": {
            "type": "string",
            "maxLength": 500,
            "example": "Great venue with excellent facilities!"
          }
        },
        "required": ["rating"]
      },
      "CourtCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Court 1"
          },
          "sport": {
            "type": "string",
            "enum": ["badminton", "tennis", "cricket", "football", "basketball", "volleyball", "squash", "table-tennis", "swimming", "gym"],
            "example": "badminton"
          },
          "pricePerHour": {
            "type": "number",
            "example": 150
          },
          "description": {
            "type": "string",
            "example": "Premium court with synthetic surface"
          }
        },
        "required": ["name", "sport", "pricePerHour"]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7f1"
          },
          "user": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "title": {
            "type": "string",
            "example": "Booking Confirmation"
          },
          "message": {
            "type": "string",
            "example": "Your booking for Court 1 on 2024-12-25 at 10:00 AM has been confirmed."
          },
          "read": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BookingCreate": {
        "type": "object",
        "properties": {
          "court": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e9"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2024-12-25"
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "example": "10:00"
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "example": "11:00"
          }
        },
        "required": ["court", "date", "startTime", "endTime"]
      },
      "CourtAvailability": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "example": "2024-12-25"
          },
          "slots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "example": "09:00"
                },
                "endTime": {
                  "type": "string",
                  "example": "10:00"
                },
                "isAvailable": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "VenueCreate": {
        "type": "object",
        "required": ["name", "address", "location", "sports", "contactInfo"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 200,
            "example": "Sports Complex Arena"
          },
          "description": {
            "type": "string",
            "maxLength": 2000,
            "example": "Premium sports facility with modern amenities"
          },
          "address": {
            "type": "object",
            "required": ["street", "city", "state", "zipCode"],
            "properties": {
              "street": {
                "type": "string",
                "example": "123 Sports Street"
              },
              "city": {
                "type": "string",
                "example": "Mumbai"
              },
              "state": {
                "type": "string",
                "example": "Maharashtra"
              },
              "zipCode": {
                "type": "string",
                "example": "400001"
              },
              "country": {
                "type": "string",
                "default": "India"
              }
            }
          },
          "location": {
            "type": "object",
            "required": ["coordinates"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Point"],
                "default": "Point"
              },
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2,
                "example": [72.8777, 19.0760]
              }
            }
          },
          "sports": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["badminton", "tennis", "cricket", "football", "basketball", "volleyball", "squash", "table-tennis", "swimming", "gym"]
            },
            "minItems": 1,
            "example": ["badminton", "tennis"]
          },
          "contactInfo": {
            "type": "object",
            "required": ["phone"],
            "properties": {
              "phone": {
                "type": "string",
                "pattern": "^[6-9]\\d{9}$",
                "example": "9876543210"
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "info@sportscomplex.com"
              },
              "website": {
                "type": "string",
                "format": "uri",
                "example": "https://sportscomplex.com"
              }
            }
          }
        }
      },
      "VenueResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "venue": {
                "$ref": "#/components/schemas/Venue"
              }
            }
          }
        }
      },
      "VenuesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "venues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Venue"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "Venue": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "name": {
            "type": "string",
            "example": "Sports Complex Arena"
          },
          "description": {
            "type": "string",
            "example": "Premium sports facility"
          },
          "address": {
            "type": "object"
          },
          "location": {
            "type": "object"
          },
          "sports": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["pending", "approved", "rejected"],
            "example": "approved"
          },
          "rating": {
            "type": "number",
            "example": 4.5
          },
          "reviewCount": {
            "type": "integer",
            "example": 25
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BookingCreate": {
        "type": "object",
        "required": ["venue", "court", "date", "startTime", "endTime"],
        "properties": {
          "venue": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "court": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e9"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2024-12-25"
          },
          "startTime": {
            "type": "string",
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
            "example": "10:00"
          },
          "endTime": {
            "type": "string",
            "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
            "example": "11:00"
          },
          "notes": {
            "type": "string",
            "maxLength": 500,
            "example": "Birthday party booking"
          },
          "paymentMethod": {
            "type": "string",
            "enum": ["card", "upi", "wallet", "cash"],
            "default": "card"
          }
        }
      },
      "BookingResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "booking": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "user": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e7"
          },
          "venue": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e8"
          },
          "court": {
            "type": "string",
            "example": "64a7b8c9d1e2f3a4b5c6d7e9"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "type": "string",
            "example": "10:00"
          },
          "endTime": {
            "type": "string",
            "example": "11:00"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "cancelled", "completed"],
            "example": "pending"
          },
          "totalAmount": {
            "type": "number",
            "example": 500
          },
          "paymentStatus": {
            "type": "string",
            "enum": ["pending", "paid", "failed", "refunded"],
            "example": "pending"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "example": 1
          },
          "totalPages": {
            "type": "integer",
            "example": 5
          },
          "totalItems": {
            "type": "integer",
            "example": 50
          },
          "itemsPerPage": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "BookingsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "bookings": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "CourtAvailability": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date",
                "example": "2024-12-25"
              },
              "slots": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "timeSlot": {
                      "type": "string",
                      "example": "09:00-10:00"
                    },
                    "isAvailable": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Venues",
      "description": "Venue management"
    },
    {
      "name": "Courts",
      "description": "Court management"
    },
    {
      "name": "Bookings",
      "description": "Booking management"
    },
    {
      "name": "Profile",
      "description": "User profile management"
    },
    {
      "name": "Reviews",
      "description": "Venue reviews and ratings"
    },
    {
      "name": "Payments",
      "description": "Payment processing"
    },
    {
      "name": "Owner",
      "description": "Owner operations"
    },
    {
      "name": "Admin",
      "description": "Admin operations"
    },
    {
      "name": "Notifications",
      "description": "User notifications"
    }
  ]
}
